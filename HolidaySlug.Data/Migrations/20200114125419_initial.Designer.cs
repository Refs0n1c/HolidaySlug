// <auto-generated />
using System;
using HolidaySlug.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HolidaySlug.Data.Migrations
{
    [DbContext(typeof(HolidaySlugContext))]
    [Migration("20200114125419_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HolidaySlug.Data.Entities.Holiday", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("ApprovedByUserID")
                        .HasColumnType("int");

                    b.Property<Guid?>("ApprovedByUserID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DaysUsed")
                        .HasColumnType("int");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolidayReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HolidayTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserID1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ApprovedByUserID1");

                    b.HasIndex("HolidayTypeID");

                    b.HasIndex("UserID1");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("HolidaySlug.Data.Entities.HolidayType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("HolidayTypes");
                });

            modelBuilder.Entity("HolidaySlug.Data.Entities.Teams", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("HolidaySlug.Data.Entities.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Entitlement")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserTeamID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserTeamID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HolidaySlug.Data.Entities.UserTeam", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.Property<Guid?>("ManagerID1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ManagerID1");

                    b.ToTable("UserTeams");
                });

            modelBuilder.Entity("HolidaySlug.Data.Entities.Holiday", b =>
                {
                    b.HasOne("HolidaySlug.Data.Entities.User", "ApprovedByUser")
                        .WithMany()
                        .HasForeignKey("ApprovedByUserID1");

                    b.HasOne("HolidaySlug.Data.Entities.HolidayType", "HolidayType")
                        .WithMany()
                        .HasForeignKey("HolidayTypeID");

                    b.HasOne("HolidaySlug.Data.Entities.User", "User")
                        .WithMany("Holidays")
                        .HasForeignKey("UserID1");
                });

            modelBuilder.Entity("HolidaySlug.Data.Entities.User", b =>
                {
                    b.HasOne("HolidaySlug.Data.Entities.UserTeam", "UserTeam")
                        .WithMany("Users")
                        .HasForeignKey("UserTeamID");
                });

            modelBuilder.Entity("HolidaySlug.Data.Entities.UserTeam", b =>
                {
                    b.HasOne("HolidaySlug.Data.Entities.User", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerID1");
                });
#pragma warning restore 612, 618
        }
    }
}
